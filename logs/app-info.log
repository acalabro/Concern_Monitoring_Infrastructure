2025-04-10T19:26:21.336+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.ConcernApp - 

-----------------------------------------------------
- NEW MONITORING SESSION - ALL COMPONENTS RESTARTED -
-----------------------------------------------------



2025-04-10T19:26:21.337+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Starting components
2025-04-10T19:26:21.340+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.broker.ActiveMQBrokerManager - Start SSL Broker
2025-04-10T19:26:21.501+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connecting to ActiveMQ
2025-04-10T19:26:21.501+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.ConcernApp - Connected to ActiveMQ
2025-04-10T19:26:21.650+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - CEP creation 
2025-04-10T19:26:21.657+0200 [grizzly-http-server-2] INFO  it.cnr.isti.labsedc.concern.cep.EsperComplexEventProcessorManager - CEP creation 
2025-04-10T19:26:21.676+0200 [Thread-12] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne creates a listening channel called: DROOLS-InstanceOne
2025-04-10T19:26:21.676+0200 [Thread-13] INFO  it.cnr.isti.labsedc.concern.cep.EsperComplexEventProcessorManager - ...CEP named InstanceTwo creates a listening channel called: ESPER-InstanceTwo
2025-04-10T19:26:21.952+0200 [Thread-12] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne created Session and fires rules /home/acalabro/eclipse-workspace/Concern_Monitoring_Infrastructure/src/main/resources/startupRule.drl with knowledgePackages: [[Package name=it.cnr.isti.labsedc.concern.event]]
2025-04-10T19:26:48.096+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne receives rules //created Jan 24, 2023 - 17:41:32
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.event.ConcernICTGatewayEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.notification.NotificationManager;

//Check a sequence of events strictly

dialect "java"

declare ConcernICTGatewayEvent
    @role( event )
    @timestamp( timestamp )
    @expires(2m)
end


declare FirstAndSecondEvent
    @role( event )
    @expires(2m)
    @timestamp ( timestamp )
    destinationID : String
	senderID : String	
	first : ConcernICTGatewayEvent
	second : ConcernICTGatewayEvent
	name : String
	timestamp : long
end

declare FirstAndSecondAndThirdEvent
    @role( event )
    @expires(2m)
    @timestamp ( timestamp )
	destinationID : String
	senderID : String	
	first : ConcernICTGatewayEvent
	second: ConcernICTGatewayEvent
	third : ConcernICTGatewayEvent
	name: String
	timestamp : long
end

rule "checkFirst"
no-loop
salience 1000
dialect "java"
when
	$aEvent: ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.consumed == false);

then
		$aEvent.setConsumed(true);
		update($aEvent);
		KieLauncher.printInfo("Session started - Rule fired:" + drools.getRule().getName());		
end

rule "checkStarter"
no-loop
salience 999
dialect "java"
when
	$aEvent: ConcernICTGatewayEvent(
		this.consumed == false);
	not(ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.consumed == true, 
		this before $aEvent) || FirstAndSecondEvent() || FirstAndSecondAndThirdEvent()
		);
then
		retract($aEvent);
		NotificationManager.NotifyViolation($aEvent.getSenderID(), "Unattended event - Rule fired:" + drools.getRule().getName(), drools.getRule().getName(), drools.getRule().getMetaData());	
end



rule "doubleStart"
no-loop
salience 998
dialect "java"
when
	$aEvent: ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.consumed == true);
		
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.consumed == false,
		this after $aEvent);
then
		retract($aEvent);
		retract($bEvent);
		NotificationManager.NotifyViolation($aEvent.getSenderID(), "Unattended event - Rule fired:" + drools.getRule().getName(), drools.getRule().getName(), drools.getRule().getMetaData());	
end

rule "catchFirstAndCheckSecond"
no-loop
salience 997
dialect "java"
when
	$aEvent: ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.consumed == true);
		
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID(),
		this.destinationID == $aEvent.getDestinationID(),
		this.name != "REGISTRATION_RESPONSE" || this.ICTMessageType != "REGISTRATION_RESPONSE" ||  this.ICTMessageCategory != "REGISTRATION",
		this after $aEvent);
then
		retract($aEvent);
		retract($bEvent);
		NotificationManager.NotifyViolation($aEvent.getSenderID(), "Unattended event - Rule fired:" + drools.getRule().getName(), drools.getRule().getName(), drools.getRule().getMetaData());	
end


rule "catchFirstAndSecond"
no-loop
salience 996
dialect "java"
when
	$aEvent: ConcernICTGatewayEvent(
		this.senderID == "ICTGW_Probe",
		this.destinationID == "Monitoring",
		this.name == "AUTHENTICATION_REQUEST",
		this.ICTMessageType == "AUTHENTICATION_REQUEST",
		this.ICTMessageCategory == "AUTHENTICATION",
		this.consumed == true
		);
		
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID,
		this.destinationID == $aEvent.getDestinationID,
		this.name == "REGISTRATION_RESPONSE",
		this.ICTMessageType == "REGISTRATION_RESPONSE",
		this.ICTMessageCategory == "REGISTRATION",
		this after $aEvent);
	
then
	FirstAndSecondEvent captured = new FirstAndSecondEvent();
	captured.setTimestamp($aEvent.getTimestamp());
	captured.setFirst($aEvent);
	captured.setSecond($bEvent);
	captured.setDestinationID($aEvent.getDestinationID());
	captured.setSenderID($aEvent.getSenderID());
	captured.setName($aEvent.getName() + "-" + $bEvent.getName());
	insert(captured);
	retract($aEvent);
	retract($bEvent);
	KieLauncher.printInfo("ComplexEvent first and second created - Rule fired:" + drools.getRule().getName());	
end

rule "checkForCorrectThird"
no-loop
salience 995
dialect "java"
when
	$aEvent: FirstAndSecondEvent();
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID(),
		this.destinationID == $aEvent.getDestinationID(),
		this.name != "TOPOLOGY_ELEMENTS_RESPONSE" || this.ICTMessageType != "TOPOLOGY_ELEMENTS_RESPONSE" ||  this.ICTMessageCategory != "DATA",
		this after $aEvent);
then
		retract($aEvent);
		retract($bEvent);
		NotificationManager.NotifyViolation($aEvent.getSenderID(), "Unattended event - Rule fired:" + drools.getRule().getName(), drools.getRule().getName(), drools.getRule().getMetaData());	
end

rule "catchSecondAndThird"
no-loop
salience 994
dialect "java"
when
	$aEvent: FirstAndSecondEvent();
		
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID(),
		this.destinationID == $aEvent.getDestinationID(),
		this.name == "TOPOLOGY_ELEMENTS_RESPONSE",
		this.ICTMessageType == "TOPOLOGY_ELEMENTS_RESPONSE",
		this.ICTMessageCategory == "DATA",
		this after $aEvent);	
then
	FirstAndSecondAndThirdEvent captured = new FirstAndSecondAndThirdEvent();
	captured.setTimestamp($aEvent.getTimestamp());
	captured.setFirst($aEvent.getFirst());
	captured.setSecond($aEvent.getSecond());
	captured.setThird($bEvent);
	captured.setDestinationID($aEvent.getDestinationID());
	captured.setSenderID($aEvent.getSenderID());
	captured.setName($aEvent.getName() + "-" + $bEvent.getName());
	insert(captured);
	retract($aEvent);
	retract($bEvent);
	KieLauncher.printInfo("ComplexEvent first, second and third created - Rule fired:" + drools.getRule().getName());	
end

rule "checkForCorrectFourth"
no-loop
salience 993
dialect "java"
when
	$aEvent: FirstAndSecondAndThirdEvent();
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID(),
		this.destinationID == $aEvent.getDestinationID(),
		this.name != "TOPOLOGY_ELEMENT_DETAILS_RESPONSE" || this.ICTMessageType != "TOPOLOGY_ELEMENT_DETAILS_RESPONSE" ||  this.ICTMessageCategory != "DATA",
		this after $aEvent);
then
		retract($aEvent);
		retract($bEvent);
		NotificationManager.NotifyViolation($aEvent.getSenderID(), "Unattended event - Rule fired:" + drools.getRule().getName(), drools.getRule().getName(), drools.getRule().getMetaData());		
end


rule "catchThirdAndFourth"
no-loop
salience 991
dialect "java"
when
	$aEvent: FirstAndSecondAndThirdEvent();
		
	$bEvent: ConcernICTGatewayEvent(
		this.senderID == $aEvent.getSenderID(),
		this.destinationID == $aEvent.getDestinationID(),
		this.name == "TOPOLOGY_ELEMENT_DETAILS_RESPONSE",
		this.ICTMessageType == "TOPOLOGY_ELEMENT_DETAILS_RESPONSE",
		this.ICTMessageCategory == "DATA",
		this after $aEvent);
	
then
	retract($aEvent);
	retract($bEvent);
	KieLauncher.printInfo("Cycle completed - Rule fired:" + drools.getRule().getName());	
end

2025-04-10T19:26:48.565+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - ...CEP named InstanceOne load rules received into the knowledgeBase
2025-04-10T19:26:48.565+0200 [ActiveMQ Session Task-1] INFO  it.cnr.isti.labsedc.concern.cep.DroolsComplexEventProcessorManager - How many rules within package: it.cnr.isti.labsedc.concern.event 9
