
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule0"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck0"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage0"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule1"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck1"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage1"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule2"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck2"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage2"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule3"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck3"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage3"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule4"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck4"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage4"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule5"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck5"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage5"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule6"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck6"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage6"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule7"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck7"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage7"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule8"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck8"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage8"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule9"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck9"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage9"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule10"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck10"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage10"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule11"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck11"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage11"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule12"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck12"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage12"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule13"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck13"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage13"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule14"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck14"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage14"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule15"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck15"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage15"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule16"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck16"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage16"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule17"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck17"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage17"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule18"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck18"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage18"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule19"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck19"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage19"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule20"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck20"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage20"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule21"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck21"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage21"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule22"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck22"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage22"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule23"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck23"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage23"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule24"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck24"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage24"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule25"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck25"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage25"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule26"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck26"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage26"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule27"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck27"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage27"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule28"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck28"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage28"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule29"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck29"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage29"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule30"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck30"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage30"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule31"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck31"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage31"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule32"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck32"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage32"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule33"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck33"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage33"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule34"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck34"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage34"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule35"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck35"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage35"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule36"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck36"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage36"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule37"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck37"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage37"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule38"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck38"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage38"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule39"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck39"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage39"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule40"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck40"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage40"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule41"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck41"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage41"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule42"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck42"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage42"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule43"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck43"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage43"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule44"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck44"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage44"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule45"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck45"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage45"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule46"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck46"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage46"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule47"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck47"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage47"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule48"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck48"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage48"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule49"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck49"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage49"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule50"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck50"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage50"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule51"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck51"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage51"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule52"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck52"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage52"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule53"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck53"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage53"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule54"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck54"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage54"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule55"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck55"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage55"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule56"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck56"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage56"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule57"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck57"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage57"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule58"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck58"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage58"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule59"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck59"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage59"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule60"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck60"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage60"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule61"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck61"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage61"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule62"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck62"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage62"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule63"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck63"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage63"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule64"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck64"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage64"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule65"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck65"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage65"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule66"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck66"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage66"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule67"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck67"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage67"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule68"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck68"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage68"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule69"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck69"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage69"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule70"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck70"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage70"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule71"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck71"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage71"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule72"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck72"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage72"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule73"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck73"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage73"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule74"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck74"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage74"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule75"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck75"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage75"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule76"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck76"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage76"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule77"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck77"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage77"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule78"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck78"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage78"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule79"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck79"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage79"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule80"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck80"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage80"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule81"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck81"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage81"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule82"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck82"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage82"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule83"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck83"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage83"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule84"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck84"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage84"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule85"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck85"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage85"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule86"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck86"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage86"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule87"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck87"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage87"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule88"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck88"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage88"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule89"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck89"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage89"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule90"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck90"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage90"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule91"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck91"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage91"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule92"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck92"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage92"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule93"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck93"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage93"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule94"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck94"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage94"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule95"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck95"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage95"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule96"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck96"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage96"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule97"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck97"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage97"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule98"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck98"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage98"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule99"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck99"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage99"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule100"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck100"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage100"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule101"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck101"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage101"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule102"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck102"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage102"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule103"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck103"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage103"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule104"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck104"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage104"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule105"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck105"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage105"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule106"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck106"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage106"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule107"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck107"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage107"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule108"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck108"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage108"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule109"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck109"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage109"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule110"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck110"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage110"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule111"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck111"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage111"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule112"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck112"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage112"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule113"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck113"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage113"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule114"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck114"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage114"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule115"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck115"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage115"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule116"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck116"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage116"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule117"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck117"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage117"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule118"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck118"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage118"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule119"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck119"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage119"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule120"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck120"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage120"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule121"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck121"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage121"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule122"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck122"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage122"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule123"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck123"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage123"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule124"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck124"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage124"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule125"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck125"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage125"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule126"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck126"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage126"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule127"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck127"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage127"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule128"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck128"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage128"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule129"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck129"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage129"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule130"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck130"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage130"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule131"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck131"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage131"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule132"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck132"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage132"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule133"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck133"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage133"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule134"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck134"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage134"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule135"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck135"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage135"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule136"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck136"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage136"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule137"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck137"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage137"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule138"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck138"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage138"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule139"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck139"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage139"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule140"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck140"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage140"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule141"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck141"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage141"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule142"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck142"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage142"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule143"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck143"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage143"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule144"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck144"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage144"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule145"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck145"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage145"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule146"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck146"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage146"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule147"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck147"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage147"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule148"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck148"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage148"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule149"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck149"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage149"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule150"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck150"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage150"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule151"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck151"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage151"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule152"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck152"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage152"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule153"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck153"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage153"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule154"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck154"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage154"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule155"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck155"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage155"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule156"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck156"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage156"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule157"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck157"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage157"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule158"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck158"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage158"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule159"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck159"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage159"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule160"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck160"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage160"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule161"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck161"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage161"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule162"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck162"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage162"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule163"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck163"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage163"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule164"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck164"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage164"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule165"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck165"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage165"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule166"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck166"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage166"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule167"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck167"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage167"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule168"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck168"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage168"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule169"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck169"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage169"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule170"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck170"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage170"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule171"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck171"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage171"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule172"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck172"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage172"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule173"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck173"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage173"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule174"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck174"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage174"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule175"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck175"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage175"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule176"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck176"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage176"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule177"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck177"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage177"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule178"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck178"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage178"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule179"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck179"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage179"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule180"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck180"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage180"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule181"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck181"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage181"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule182"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck182"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage182"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule183"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck183"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage183"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule184"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck184"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage184"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule185"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck185"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage185"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule186"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck186"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage186"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule187"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck187"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage187"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule188"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck188"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage188"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule189"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck189"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage189"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule190"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck190"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage190"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule191"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck191"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage191"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule192"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck192"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage192"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule193"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck193"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage193"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule194"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck194"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage194"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule195"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck195"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage195"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule196"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck196"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage196"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule197"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck197"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage197"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule198"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck198"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage198"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule199"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck199"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage199"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule200"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck200"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage200"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule201"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck201"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage201"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule202"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck202"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage202"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule203"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck203"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage203"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule204"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck204"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage204"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule205"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck205"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage205"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule206"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck206"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage206"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule207"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck207"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage207"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule208"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck208"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage208"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule209"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck209"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage209"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule210"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck210"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage210"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule211"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck211"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage211"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule212"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck212"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage212"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule213"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck213"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage213"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule214"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck214"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage214"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule215"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck215"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage215"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule216"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck216"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage216"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule217"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck217"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage217"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule218"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck218"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage218"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule219"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck219"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage219"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule220"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck220"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage220"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule221"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck221"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage221"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule222"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck222"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage222"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule223"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck223"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage223"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule224"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck224"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage224"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule225"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck225"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage225"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule226"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck226"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage226"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule227"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck227"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage227"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule228"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck228"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage228"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule229"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck229"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage229"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule230"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck230"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage230"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule231"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck231"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage231"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule232"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck232"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage232"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule233"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck233"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage233"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule234"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck234"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage234"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule235"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck235"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage235"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule236"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck236"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage236"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule237"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck237"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage237"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule238"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck238"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage238"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule239"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck239"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage239"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule240"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck240"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage240"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule241"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck241"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage241"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule242"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck242"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage242"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule243"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck243"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage243"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule244"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck244"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage244"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule245"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck245"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage245"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule246"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck246"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage246"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule247"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck247"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage247"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule248"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck248"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage248"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule249"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck249"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage249"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule250"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck250"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage250"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule251"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck251"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage251"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule252"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck252"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage252"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule253"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck253"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage253"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule254"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck254"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage254"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule255"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck255"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage255"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule256"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck256"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage256"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule257"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck257"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage257"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule258"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck258"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage258"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule259"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck259"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage259"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule260"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck260"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage260"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule261"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck261"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage261"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule262"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck262"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage262"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule263"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck263"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage263"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule264"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck264"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage264"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule265"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck265"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage265"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule266"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck266"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage266"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule267"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck267"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage267"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule268"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck268"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage268"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule269"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck269"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage269"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule270"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck270"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage270"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule271"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck271"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage271"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule272"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck272"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage272"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule273"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck273"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage273"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule274"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck274"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage274"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule275"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck275"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage275"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule276"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck276"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage276"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule277"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck277"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage277"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule278"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck278"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage278"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule279"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck279"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage279"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule280"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck280"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage280"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule281"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck281"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage281"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule282"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck282"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage282"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule283"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck283"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage283"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule284"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck284"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage284"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule285"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck285"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage285"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule286"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck286"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage286"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule287"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck287"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage287"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule288"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck288"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage288"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule289"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck289"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage289"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule290"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck290"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage290"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule291"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck291"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage291"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule292"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck292"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage292"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule293"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck293"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage293"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule294"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck294"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage294"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule295"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck295"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage295"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule296"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck296"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage296"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule297"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck297"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage297"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule298"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck298"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage298"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule299"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck299"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage299"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
