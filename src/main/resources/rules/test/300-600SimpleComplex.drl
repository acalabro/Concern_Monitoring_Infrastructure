
//created on: DEC 07, 2022
package it.cnr.isti.labsedc.concern.event;
import it.cnr.isti.labsedc.concern.event.ConcernProbeEvent;
import it.cnr.isti.labsedc.concern.utils.KieLauncher;
import it.cnr.isti.labsedc.concern.utils.Calculator;
import it.cnr.isti.labsedc.concern.event.ConcernAbstractEvent;
import it.cnr.isti.labsedc.concern.event.ConcernBaseEvent;
import it.cnr.isti.labsedc.concern.event.ConcernDTForecast;
import it.cnr.isti.labsedc.concern.rules.RulesGenerator;

dialect "java"

declare ConcernDTForecast
    @role( event )
    @timestamp( timestamp )
end

//Communication delay between LocalPlanner and GlobalPlanner exceed 20ms

dialect "java"

declare ConcernBaseEvent
    @role( event )
    @timestamp( timestamp )
end

declare LatencyEvent
    @role( event )
	latency : float
	first : ConcernBaseEvent
	second: ConcernBaseEvent
end


rule "autogenRule300"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck300"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage300"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule301"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck301"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage301"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule302"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck302"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage302"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule303"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck303"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage303"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule304"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck304"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage304"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule305"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck305"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage305"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule306"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck306"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage306"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule307"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck307"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage307"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule308"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck308"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage308"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule309"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck309"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage309"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule310"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck310"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage310"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule311"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck311"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage311"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule312"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck312"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage312"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule313"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck313"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage313"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule314"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck314"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage314"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule315"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck315"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage315"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule316"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck316"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage316"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule317"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck317"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage317"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule318"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck318"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage318"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule319"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck319"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage319"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule320"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck320"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage320"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule321"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck321"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage321"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule322"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck322"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage322"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule323"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck323"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage323"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule324"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck324"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage324"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule325"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck325"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage325"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule326"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck326"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage326"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule327"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck327"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage327"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule328"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck328"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage328"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule329"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck329"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage329"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule330"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck330"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage330"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule331"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck331"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage331"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule332"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck332"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage332"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule333"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck333"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage333"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule334"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck334"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage334"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule335"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck335"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage335"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule336"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck336"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage336"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule337"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck337"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage337"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule338"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck338"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage338"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule339"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck339"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage339"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule340"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck340"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage340"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule341"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck341"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage341"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule342"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck342"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage342"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule343"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck343"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage343"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule344"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck344"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage344"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule345"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck345"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage345"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule346"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck346"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage346"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule347"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck347"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage347"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule348"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck348"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage348"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule349"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck349"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage349"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule350"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck350"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage350"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule351"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck351"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage351"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule352"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck352"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage352"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule353"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck353"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage353"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule354"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck354"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage354"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule355"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck355"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage355"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule356"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck356"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage356"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule357"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck357"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage357"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule358"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck358"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage358"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule359"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck359"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage359"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule360"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck360"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage360"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule361"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck361"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage361"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule362"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck362"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage362"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule363"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck363"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage363"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule364"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck364"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage364"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule365"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck365"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage365"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule366"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck366"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage366"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule367"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck367"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage367"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule368"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck368"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage368"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule369"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck369"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage369"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule370"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck370"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage370"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule371"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck371"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage371"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule372"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck372"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage372"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule373"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck373"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage373"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule374"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck374"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage374"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule375"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck375"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage375"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule376"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck376"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage376"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule377"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck377"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage377"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule378"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck378"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage378"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule379"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck379"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage379"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule380"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck380"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage380"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule381"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck381"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage381"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule382"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck382"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage382"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule383"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck383"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage383"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule384"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck384"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage384"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule385"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck385"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage385"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule386"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck386"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage386"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule387"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck387"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage387"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule388"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck388"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage388"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule389"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck389"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage389"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule390"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck390"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage390"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule391"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck391"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage391"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule392"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck392"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage392"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule393"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck393"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage393"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule394"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck394"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage394"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule395"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck395"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage395"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule396"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck396"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage396"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule397"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck397"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage397"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule398"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck398"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage398"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule399"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck399"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage399"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule400"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck400"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage400"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule401"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck401"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage401"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule402"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck402"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage402"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule403"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck403"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage403"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule404"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck404"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage404"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule405"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck405"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage405"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule406"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck406"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage406"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule407"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck407"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage407"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule408"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck408"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage408"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule409"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck409"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage409"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule410"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck410"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage410"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule411"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck411"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage411"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule412"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck412"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage412"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule413"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck413"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage413"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule414"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck414"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage414"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule415"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck415"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage415"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule416"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck416"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage416"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule417"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck417"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage417"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule418"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck418"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage418"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule419"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck419"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage419"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule420"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck420"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage420"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule421"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck421"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage421"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule422"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck422"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage422"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule423"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck423"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage423"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule424"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck424"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage424"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule425"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck425"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage425"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule426"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck426"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage426"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule427"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck427"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage427"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule428"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck428"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage428"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule429"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck429"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage429"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule430"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck430"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage430"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule431"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck431"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage431"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule432"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck432"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage432"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule433"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck433"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage433"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule434"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck434"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage434"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule435"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck435"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage435"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule436"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck436"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage436"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule437"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck437"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage437"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule438"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck438"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage438"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule439"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck439"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage439"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule440"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck440"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage440"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule441"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck441"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage441"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule442"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck442"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage442"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule443"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck443"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage443"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule444"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck444"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage444"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule445"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck445"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage445"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule446"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck446"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage446"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule447"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck447"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage447"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule448"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck448"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage448"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule449"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck449"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage449"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule450"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck450"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage450"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule451"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck451"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage451"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule452"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck452"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage452"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule453"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck453"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage453"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule454"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck454"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage454"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule455"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck455"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage455"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule456"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck456"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage456"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule457"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck457"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage457"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule458"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck458"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage458"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule459"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck459"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage459"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule460"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck460"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage460"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule461"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck461"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage461"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule462"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck462"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage462"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule463"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck463"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage463"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule464"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck464"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage464"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule465"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck465"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage465"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule466"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck466"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage466"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule467"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck467"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage467"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule468"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck468"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage468"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule469"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck469"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage469"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule470"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck470"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage470"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule471"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck471"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage471"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule472"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck472"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage472"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule473"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck473"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage473"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule474"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck474"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage474"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule475"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck475"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage475"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule476"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck476"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage476"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule477"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck477"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage477"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule478"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck478"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage478"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule479"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck479"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage479"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule480"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck480"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage480"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule481"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck481"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage481"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule482"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck482"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage482"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule483"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck483"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage483"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule484"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck484"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage484"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule485"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck485"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage485"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule486"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck486"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage486"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule487"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck487"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage487"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule488"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck488"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage488"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule489"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck489"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage489"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule490"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck490"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage490"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule491"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck491"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage491"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule492"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck492"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage492"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule493"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck493"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage493"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule494"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck494"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage494"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule495"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck495"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage495"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule496"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck496"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage496"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule497"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck497"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage497"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule498"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck498"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage498"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule499"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck499"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage499"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule500"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck500"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage500"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule501"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck501"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage501"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule502"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck502"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage502"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule503"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck503"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage503"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule504"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck504"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage504"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule505"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck505"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage505"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule506"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck506"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage506"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule507"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck507"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage507"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule508"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck508"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage508"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule509"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck509"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage509"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule510"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck510"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage510"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule511"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck511"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage511"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule512"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck512"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage512"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule513"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck513"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage513"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule514"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck514"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage514"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule515"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck515"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage515"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule516"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck516"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage516"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule517"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck517"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage517"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule518"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck518"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage518"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule519"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck519"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage519"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule520"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck520"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage520"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule521"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck521"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage521"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule522"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck522"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage522"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule523"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck523"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage523"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule524"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck524"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage524"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule525"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck525"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage525"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule526"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck526"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage526"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule527"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck527"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage527"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule528"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck528"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage528"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule529"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck529"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage529"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule530"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck530"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage530"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule531"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck531"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage531"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule532"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck532"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage532"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule533"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck533"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage533"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule534"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck534"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage534"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule535"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck535"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage535"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule536"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck536"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage536"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule537"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck537"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage537"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule538"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck538"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage538"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule539"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck539"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage539"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule540"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck540"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage540"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule541"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck541"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage541"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule542"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck542"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage542"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule543"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck543"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage543"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule544"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck544"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage544"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule545"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck545"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage545"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule546"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck546"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage546"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule547"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck547"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage547"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule548"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck548"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage548"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule549"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck549"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage549"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule550"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck550"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage550"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule551"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck551"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage551"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule552"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck552"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage552"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule553"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck553"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage553"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule554"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck554"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage554"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule555"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck555"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage555"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule556"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck556"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage556"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule557"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck557"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage557"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule558"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck558"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage558"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule559"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck559"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage559"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule560"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck560"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage560"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule561"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck561"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage561"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule562"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck562"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage562"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule563"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck563"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage563"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule564"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck564"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage564"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule565"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck565"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage565"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule566"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck566"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage566"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule567"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck567"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage567"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule568"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck568"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage568"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule569"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck569"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage569"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule570"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck570"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage570"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule571"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck571"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage571"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule572"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck572"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage572"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule573"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck573"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage573"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule574"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck574"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage574"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule575"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck575"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage575"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule576"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck576"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage576"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule577"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck577"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage577"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule578"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck578"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage578"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule579"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck579"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage579"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule580"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck580"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage580"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule581"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck581"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage581"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule582"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck582"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage582"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule583"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck583"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage583"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule584"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck584"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage584"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule585"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck585"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage585"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule586"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck586"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage586"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule587"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck587"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage587"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule588"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck588"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage588"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule589"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck589"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage589"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule590"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck590"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage590"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule591"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck591"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage591"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule592"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck592"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage592"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule593"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck593"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage593"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule594"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck594"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage594"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule595"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck595"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage595"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule596"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck596"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage596"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule597"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck597"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage597"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule598"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck598"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage598"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
rule "autogenRule599"
no-loop
salience 10
dialect "java"
when
$aEvent : ConcernDTForecast(
this.getSenderID == "DigitalTwin",
this.getDestinationID == "Monitoring");
then
RulesGenerator.generateRuleFromDTForecast($aEvent);
retract($aEvent);	
end

	rule "localGlobalAvgDelayCheck599"
	no-loop
	salience 10
	dialect "java"
	when
	
		$aEvent: ConcernBaseEvent(this.getSenderID == "LocalPlanner", 
									this.getDestinationID == "GlobalPlanner");
									
		$bEvent: ConcernBaseEvent(this.getSenderID == "GlobalPlanner",
									this.getSessionID == $aEvent.getSessionID,
									this.getData == $aEvent.getData,
									this.getName == $aEvent.getName,
									this.getChecksum == $aEvent.getChecksum,
									this after $aEvent);
	then					
		LatencyEvent warning = new LatencyEvent();
		warning.setLatency(
			Calculator.latency(
				$bEvent.getTimestamp(),
                $aEvent.getTimestamp()));
		KieLauncher.printer("latencyEventCreated " + warning.getLatency());
		
		insert(warning);	                    
		retract($aEvent);
    	retract($bEvent);	
	end
	
	rule "calculateAverage599"
	no-loop
	salience 5
	dialect "java"
	when

	    Number( longValue > 20 ) from accumulate(
	        LatencyEvent( $latency : latency ) over window:length( 10 ),
	        average( $latency ) )
	then
		KieLauncher.printer(System.currentTimeMillis() + "Boundary violated");
	end
